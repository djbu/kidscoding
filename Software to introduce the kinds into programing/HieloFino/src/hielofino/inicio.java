/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hielofino;

import Interprete.CGen;
import Interprete.VisitadorCGen;
import Lexico.Yylex;
import Sintactico.parser;
import ast.Programa;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import static java.lang.System.exit;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.newdawn.slick.AppGameContainer;
import org.newdawn.slick.CanvasGameContainer;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.SlickException;
import semantica.AnalizadorSemantico;
import semantica.SemantErrorReport;
import util.Utilidades;

/**
 *
 * @author Diego André
 */
public class inicio extends javax.swing.JFrame {

    private boolean ejecutando;
    private JFileChooser fc;
    private File archivoActual;
    private CanvasGameContainer cont;
    private Game game;
    
    /**
     * Creates new form inicio
     */
    public inicio() {
        
        ejecutando = false;
        fc = new JFileChooser( System.getProperty("user.dir")+"\\..\\..\\..\\src\\Pruebas" );
        initComponents();
        
        try {
            cargarJuego();
        } catch (SlickException ex) {
            System.err.println("Error al inicar el juego\n"+ex.getMessage());
        }
    }
    
    private void cargarJuego() throws SlickException
    {
        game = new Game("Hielo Fino");
        cont = new CanvasGameContainer( game);
        cont.getContainer().setAlwaysRender(true);       
        cont.requestFocus();
        cont.start();     
        CanvasJuego.add( cont );
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Juego = new javax.swing.JPanel();
        CanvasJuego = new javax.swing.JPanel();
        imgCuerpo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Codigo = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Consola = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        Nuevo = new javax.swing.JButton();
        Abrir = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        Ejecutar = new javax.swing.JButton();
        Anterior = new javax.swing.JButton();
        Siguiente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Juego.setBackground(new java.awt.Color(168, 214, 255));
        Juego.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout CanvasJuegoLayout = new javax.swing.GroupLayout(CanvasJuego);
        CanvasJuego.setLayout(CanvasJuegoLayout);
        CanvasJuegoLayout.setHorizontalGroup(
            CanvasJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );
        CanvasJuegoLayout.setVerticalGroup(
            CanvasJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );

        Juego.add(CanvasJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 37, 437, 345));

        imgCuerpo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cuerpo.PNG"))); // NOI18N
        Juego.add(imgCuerpo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 484, -1));

        Codigo.setColumns(20);
        Codigo.setRows(5);
        Codigo.setBorder(javax.swing.BorderFactory.createTitledBorder("Código"));
        jScrollPane1.setViewportView(Codigo);

        Consola.setEditable(false);
        Consola.setColumns(20);
        Consola.setRows(5);
        Consola.setBorder(javax.swing.BorderFactory.createTitledBorder("Consola"));
        jScrollPane2.setViewportView(Consola);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        Nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/nuevo.png"))); // NOI18N
        Nuevo.setToolTipText("Nuevo");
        Nuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NuevoMouseClicked(evt);
            }
        });

        Abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/abrir.png"))); // NOI18N
        Abrir.setToolTipText("Abrir");
        Abrir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AbrirMouseClicked(evt);
            }
        });
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });

        Guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/guardar.png"))); // NOI18N
        Guardar.setToolTipText("Guardar");
        Guardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GuardarMouseClicked(evt);
            }
        });

        Ejecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/play.png"))); // NOI18N
        Ejecutar.setToolTipText("Ejecutar");
        Ejecutar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Ejecutar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EjecutarMouseClicked(evt);
            }
        });
        Ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EjecutarActionPerformed(evt);
            }
        });

        Anterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/anteriort.png"))); // NOI18N
        Anterior.setToolTipText("Anterior");
        Anterior.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Anterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnteriorMouseClicked(evt);
            }
        });

        Siguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/siguiente.png"))); // NOI18N
        Siguiente.setToolTipText("Siguiente");
        Siguiente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Siguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SiguienteMouseClicked(evt);
            }
        });

        jLabel1.setText("19x15");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Ejecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(94, 94, 94)
                .addComponent(Anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Siguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(Abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(Ejecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(Anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(Siguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Juego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
            .addGroup(layout.createSequentialGroup()
                .addComponent(Juego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EjecutarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EjecutarMouseClicked
        
        if(!ejecutando)
        {
            Ejecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/stop.png"))); // NOI18N
            Ejecutar.setToolTipText("Detener"); 
            
            if(GuardarEnElArchivo())
            {
                
                 try 
                {
                    Consola.setText("");
                   parser parser_obj = new parser(new Yylex(new FileInputStream( archivoActual.getPath() )));
                  
                   Programa result = (Programa) parser_obj.parse().value;
                                      
                   result.dump(System.out, 0);
                   
                   SemantErrorReport.getInstancia().SemantErrorReportReset();
                   
                    AnalizadorSemantico sem = new AnalizadorSemantico(result);
                  sem.analizar();
                   
                    
          if(SemantErrorReport.getInstancia().tieneErrores()){
                System.err.println("La compilación ha terminado con "+ SemantErrorReport.getInstancia().getErrores() +" errores");
		
                Ejecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/play.png"))); // NOI18N
            Ejecutar.setToolTipText("Ejecutar");
                
            }else
          {
                CGen qwe = new CGen(result, sem.getTabla());
                qwe.generarCodigo(System.out);
                              
               //El interpretador del arbol debe arrojar una lista de movimientos y es la que juego recibirá para ejecutarse;
               game.setJugar( VisitadorCGen.list );
          }      
                } catch (FileNotFoundException ex) {

                    JOptionPane a = new JOptionPane("Error al abrir el archivo: \n"+ex, JOptionPane.WARNING_MESSAGE); 

                    System.out.println("Error al abrir el archivo: \n"+ex);

                } catch (Exception ex) {  
                    
                    System.out.println("Error al ejecutar el proceso de interpretación: \n"+ex);
                      // throw new NullPointerException("Punteor nulo"); //To change body of generated methods, choose Tools | Templates.
                }
                
        
        /*try {
            Consola.setText("");
            
            parser parser_obj = new parser(new Yylex(new FileInputStream( archivoActual.getPath() )));
            Programa result =  (Programa) parser_obj.parse().value;
            
             if (parser_obj.getOmerrs() > 0) {
		//System.err.println("La compilación ha terminado con "+ parser.getOmerrs() +" errores");
		              System.out.println("Hay muchos erroes pito");
                System.exit(1);
	    }*/
            
          
            //AnalizadorSemantico sem = new AnalizadorSemantico(result);
            //sem.analizar();
             
             
            
           /*if(SemantErrorReport.getInstancia().tieneErrores()){
                System.err.println("La compilación ha terminado con "+ SemantErrorReport.getInstancia().getErrores() +" errores");
		System.exit(1);
            }
            result.dump(System.out, 0);
            System.out.println("La compilación ha finalizado correctamente");
        }catch (URISyntaxException ex) {
            System.out.println("Ha ocurrido un error de formato en la ruta del archivo");
        }catch (FileNotFoundException ex) {
            System.out.println("No se pudo abrir el archivo de entrada");
        }catch(ArrayIndexOutOfBoundsException ex){
            System.out.println("Usar: parser.Parser programa.tny");
        }catch (Exception ex) {
            ex.printStackTrace(System.err);
	    Utilidades.fatalError("Error inesperado en el analizador sintáctico");
        }   */
            
            
            
            
          
            
            
                
                
             
            }
                        
        }
        else
        {
            Ejecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/play.png"))); // NOI18N
            Ejecutar.setToolTipText("Ejecutar");
            game.setMenu();
        }
        
        
        ejecutando = !ejecutando;        
    }//GEN-LAST:event_EjecutarMouseClicked

    private void GuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuardarMouseClicked
        
       GuardarEnElArchivo();
        
    }//GEN-LAST:event_GuardarMouseClicked

    /* Retorna true si pudo escribir, y false si no*/
    private boolean GuardarEnElArchivo()
    {
        if(archivoActual!=null)
        {
            escribirArchivo( Codigo.getText() );
            return true;
        }
        else
        {
            if(fc.showSaveDialog(Guardar)==0)
            {
                archivoActual = new File(fc.getSelectedFile().getPath());
                escribirArchivo( Codigo.getText() );
            }
            else
                return false;
        }
        
        return false;
    }
    
    private void AbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AbrirMouseClicked
     
        
        
    }//GEN-LAST:event_AbrirMouseClicked

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        
        //Si escoje un archivo, recordar que puede que no lo haga
        if(fc.showOpenDialog(Abrir) == 0) 
        {
            String text = leerArchivo(fc.getSelectedFile().getPath() );       
            Codigo.setText(text);        
        }
        
    }//GEN-LAST:event_AbrirActionPerformed

    private void NuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NuevoMouseClicked
        
        if(  fc.getSelectedFile()!=null  )
        {
            archivoActual = null;
            fc = new JFileChooser( System.getProperty("user.dir")+"\\src\\Pruebas" );
            Codigo.setText("");
        }        
        
    }//GEN-LAST:event_NuevoMouseClicked

    private void AnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnteriorMouseClicked
       Menu.PrevousMap();
    }//GEN-LAST:event_AnteriorMouseClicked

    private void SiguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SiguienteMouseClicked
       Menu.NextMap();
    }//GEN-LAST:event_SiguienteMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing

    private void EjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EjecutarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EjecutarActionPerformed

    /* codigo encontrado en http://codigoprogramacion.com/cursos/java/110-manipulacion-de-archivoslectura-de-un-archivo-de-texto-en-java.html*/
   //El parametro nombre indica el nombre del archivo por ejemplo "C:/prueba.txt"
    private String leerArchivo(String nombre) 	
    {
	 
	try{       
	 
	//Creamos el objeto del archivo que vamos a leer
	archivoActual = new File(nombre);
	 
        
        
	//Creamos el objeto FileReader que abrira el flujo(Stream) de datos para realizar la lectura
	FileReader lectorArchivo = new FileReader(archivoActual);
	 
	//Creamos un lector en buffer para recopilar datos a travez del flujo "lectorArchivo" que hemos creado
	BufferedReader br = new BufferedReader(lectorArchivo);
	 
	String l="";
	//Esta variable "l" la utilizamos para guardar mas adelante toda la lectura del archivo
	 
	String aux="";/*variable auxiliar*/
	 
	while(true)
	//este ciclo while se usa para repetir el proceso de lectura, ya que se lee solo 1 linea de texto a la vez
	{
	aux=br.readLine();
	//leemos una linea de texto y la guardamos en la variable auxiliar
	if(aux!=null)
	l=l+aux+"\n";
	/*si la variable aux tiene datos se va acumulando en la variable l,
	* en caso de ser nula quiere decir que ya nos hemos leido todo
	* el archivo de texto*/
	 
	else
	break;
	}
	 
	br.close();
	 
	lectorArchivo.close();
	 
	return l;
	 
	}catch(IOException e){
	System.out.println("Error:"+e.getMessage());
	}
	return null;
        
}
    
    /*Codigo encontrado en http://codigoprogramacion.com/cursos/java/130-manejo-de-archivos-en-java-escribir-en-un-archivo-de-texto-txt.html*/
    //El parametro nombre indica el Texto que se escribirá en el archivo"
    public void escribirArchivo(String texto)
    {	 
	//Escritura
	try{
	FileWriter w = new FileWriter(archivoActual);
	BufferedWriter bw = new BufferedWriter(w);
	PrintWriter wr = new PrintWriter(bw);  
	wr.write(texto);//escribimos en el archivo
	wr.close();
	bw.close();
	}catch(IOException e){};
    }
    public static void escribirMsjError(String a)
    {
        Consola.append(a);
        Consola.append("\n------------------------\n");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inicio().setVisible(true);
            }
        });
        
        
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abrir;
    private javax.swing.JButton Anterior;
    private javax.swing.JPanel CanvasJuego;
    private javax.swing.JTextArea Codigo;
    public static javax.swing.JTextArea Consola;
    private javax.swing.JButton Ejecutar;
    private javax.swing.JButton Guardar;
    private javax.swing.JPanel Juego;
    private javax.swing.JButton Nuevo;
    private javax.swing.JButton Siguiente;
    private javax.swing.JLabel imgCuerpo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
